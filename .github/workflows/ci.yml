name: Android Appium Tests

on: [push, pull_request]

jobs:
  android-test:
    runs-on: macos-latest  # Use macOS to support emulator
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Android SDK environment
        run: |
          echo "ANDROID_SDK_ROOT=$HOME/Library/Android/sdk" >> $GITHUB_ENV
          echo "$HOME/Library/Android/sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$HOME/Library/Android/sdk/platform-tools" >> $GITHUB_PATH

      - name: Install SDK components
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-30" "emulator" "system-images;android-30;google_apis;x86_64"

      - name: Create AVD
        run: |
          echo "no" | avdmanager create avd -n test -k "system-images;android-30;google_apis;x86_64" --force
          echo "hw.cpu.ncore=2" >> $HOME/.android/avd/test.avd/config.ini

      - name: Start emulator
        run: |
          nohup emulator -avd test -no-audio -no-window -gpu swiftshader_indirect > /dev/null 2>&1 &
          adb wait-for-device
          echo "Waiting for emulator to fully boot..."
          boot_completed=""
          until [[ "$boot_completed" == "1" ]]; do
          sleep 5
          boot_completed=$(adb shell getprop sys.boot_completed | tr -d '\r')
          echo "Boot completed: $boot_completed"
          done
          echo "Emulator booted successfully!"
          adb shell input keyevent 82
        timeout-minutes: 10

      - name: Start Appium server
        run: |
          nohup appium > appium.log 2>&1 &
          sleep 10

      - name: Run tests
        run: npm run android

      - name: Upload Allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: ./allure-results
