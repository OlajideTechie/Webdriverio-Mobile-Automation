name: Android Appium Tests

on: [push, pull_request]

jobs:
  android-test:
    runs-on: macos-latest  # Use macOS to support emulator
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - name: Install Android cmdline-tools
        run: |
           mkdir -p $HOME/Android/sdk/cmdline-tools
           cd $HOME/Android/sdk/cmdline-tools
           curl -o commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-mac-9477386_latest.zip
           unzip commandlinetools.zip
           mv cmdline-tools latest

      - name: Set Android SDK environment variables
        run: |
            echo "ANDROID_SDK_ROOT=$HOME/Android/sdk" >> $GITHUB_ENV
            echo "$HOME/Android/sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
            echo "$HOME/Android/sdk/platform-tools" >> $GITHUB_PATH

      - name: Accept licenses and install SDK components
        run: |
           yes | sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses
           sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-30" "system-images;android-30;google_apis;x86"

      - name: Create AVD
        run: |
          echo "no" | avdmanager create avd -n test -k "system-images;android-30;google_apis;x86" --force
          echo "hw.cpu.ncore=2" >> $HOME/.android/avd/test.avd/config.ini

      - name: Start emulator
        run: |
          $ANDROID_HOME/emulator/emulator -avd test -no-snapshot -no-audio -no-window -no-boot-anim &
          adb wait-for-device
          adb shell settings put global window_animation_scale 0
          adb shell settings put global transition_animation_scale 0
          adb shell settings put global animator_duration_scale 0

      - name: Wait for emulator to fully boot
        run: |
          boot_completed=""
          while [[ "$boot_completed" != "1" ]]; do
            sleep 5
            boot_completed=$(adb shell getprop sys.boot_completed | tr -d '\r')
          done
          echo "Emulator booted."

      - name: Start Appium server
        run: |
          nohup appium > appium.log 2>&1 &
          sleep 10

      - name: Run tests
        run: npm run android

      - name: Upload Allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: ./allure-results
